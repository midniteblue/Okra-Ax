syntax = "proto3";
package org.okraAx.v3;
option optimize_for = SPEED;
//option java_generic_services = true;
option java_package = "org.okraAx.v3";
option java_outer_classname = "Gpc";
option java_multiple_files = true;

import "AxAny.proto";

//  Gpc Call Message.
//  Async remote produce call based on GPB(Google Protocol Buffers).
message GpcCall {
    //  the remote call produce name.
    string method = 1;
    //  the request param message. the message must be gpb message.
    //  the gpb param message will be covert to args array for java method.
    //  example:
    //      take the {@link GpcError} in this proto file as an example.
    //  define the gpb service:
    //  ...
    //  service  XXXService {
    //      rpc doAction (GpcError) returns (GpcVoid);
    //      ... define any more rpc.
    //  }
    //
    //  map the java method:
    //      void doAction(int state, String msg).
    //
    bytes params = 2;
}
//  Gpc Void Message.
//  the vold param or returns.
message GpcVoid {
}
//  Gpc relay message.
//  GpcRelay message use to forward the message data to other target without any logic.
message GpcRelay {
    int64 source = 1;   //  the forward target.
    bytes data = 2;     //  the relay message.
}
//  Gpc Error Message.
//  the normal error message callback by remote service.
message GpcError {
    int32 state = 1; // error code
    string msg = 2; // response special error message. [Nullable].
}
