// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FyChessMessage.proto

package org.okraAx.v3.chess.beans;

/**
 * <pre>
 * 响应获取房间列表
 * </pre>
 *
 * Protobuf type {@code org.okraAx.v3.ResChessRoomInfo}
 */
public  final class ResChessRoomInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.okraAx.v3.ResChessRoomInfo)
    ResChessRoomInfoOrBuilder {
  // Use ResChessRoomInfo.newBuilder() to construct.
  private ResChessRoomInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ResChessRoomInfo() {
    infos_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ResChessRoomInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              infos_ = new java.util.ArrayList<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            infos_.add(
                input.readMessage(org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        infos_ = java.util.Collections.unmodifiableList(infos_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.okraAx.v3.chess.beans.ResChessRoomInfo.class, org.okraAx.v3.chess.beans.ResChessRoomInfo.Builder.class);
  }

  public interface RoomInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.okraAx.v3.ResChessRoomInfo.RoomInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *  房间ID
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    java.util.List<java.lang.String>
        getPlayersList();
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    java.lang.String getPlayers(int index);
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayersBytes(int index);
  }
  /**
   * Protobuf type {@code org.okraAx.v3.ResChessRoomInfo.RoomInfo}
   */
  public  static final class RoomInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.okraAx.v3.ResChessRoomInfo.RoomInfo)
      RoomInfoOrBuilder {
    // Use RoomInfo.newBuilder() to construct.
    private RoomInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoomInfo() {
      id_ = 0;
      players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RoomInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = players_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_RoomInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_RoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.class, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *  房间ID
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int PLAYERS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList players_;
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getPlayersList() {
      return players_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    public java.lang.String getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>repeated string players = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayersBytes(int index) {
      return players_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < players_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, players_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += computeStringSizeNoTag(players_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPlayersList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo)) {
        return super.equals(obj);
      }
      org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo other = (org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getPlayersList()
          .equals(other.getPlayersList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.okraAx.v3.ResChessRoomInfo.RoomInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.okraAx.v3.ResChessRoomInfo.RoomInfo)
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_RoomInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_RoomInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.class, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder.class);
      }

      // Construct using org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_RoomInfo_descriptor;
      }

      public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo getDefaultInstanceForType() {
        return org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.getDefaultInstance();
      }

      public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo build() {
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo buildPartial() {
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo result = new org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = players_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.players_ = players_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo) {
          return mergeFrom((org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo other) {
        if (other == org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       *  房间ID
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *  房间ID
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *  房间ID
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new com.google.protobuf.LazyStringArrayList(players_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPlayersList() {
        return players_.getUnmodifiableView();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public java.lang.String getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayersBytes(int index) {
        return players_.getByteString(index);
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public Builder setPlayers(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public Builder addPlayers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<java.lang.String> values) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public Builder clearPlayers() {
        players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>repeated string players = 2;</code>
       */
      public Builder addPlayersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org.okraAx.v3.ResChessRoomInfo.RoomInfo)
    }

    // @@protoc_insertion_point(class_scope:org.okraAx.v3.ResChessRoomInfo.RoomInfo)
    private static final org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo();
    }

    public static org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoomInfo>
        PARSER = new com.google.protobuf.AbstractParser<RoomInfo>() {
      public RoomInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RoomInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoomInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoomInfo> getParserForType() {
      return PARSER;
    }

    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int INFOS_FIELD_NUMBER = 1;
  private java.util.List<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo> infos_;
  /**
   * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
   */
  public java.util.List<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo> getInfosList() {
    return infos_;
  }
  /**
   * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
   */
  public java.util.List<? extends org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder> 
      getInfosOrBuilderList() {
    return infos_;
  }
  /**
   * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
   */
  public int getInfosCount() {
    return infos_.size();
  }
  /**
   * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
   */
  public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo getInfos(int index) {
    return infos_.get(index);
  }
  /**
   * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
   */
  public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder getInfosOrBuilder(
      int index) {
    return infos_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < infos_.size(); i++) {
      output.writeMessage(1, infos_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < infos_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, infos_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.okraAx.v3.chess.beans.ResChessRoomInfo)) {
      return super.equals(obj);
    }
    org.okraAx.v3.chess.beans.ResChessRoomInfo other = (org.okraAx.v3.chess.beans.ResChessRoomInfo) obj;

    boolean result = true;
    result = result && getInfosList()
        .equals(other.getInfosList());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (getInfosCount() > 0) {
      hash = (37 * hash) + INFOS_FIELD_NUMBER;
      hash = (53 * hash) + getInfosList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.okraAx.v3.chess.beans.ResChessRoomInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.okraAx.v3.chess.beans.ResChessRoomInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 响应获取房间列表
   * </pre>
   *
   * Protobuf type {@code org.okraAx.v3.ResChessRoomInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.okraAx.v3.ResChessRoomInfo)
      org.okraAx.v3.chess.beans.ResChessRoomInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.okraAx.v3.chess.beans.ResChessRoomInfo.class, org.okraAx.v3.chess.beans.ResChessRoomInfo.Builder.class);
    }

    // Construct using org.okraAx.v3.chess.beans.ResChessRoomInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getInfosFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (infosBuilder_ == null) {
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        infosBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.okraAx.v3.chess.beans.FyChessMi.internal_static_org_okraAx_v3_ResChessRoomInfo_descriptor;
    }

    public org.okraAx.v3.chess.beans.ResChessRoomInfo getDefaultInstanceForType() {
      return org.okraAx.v3.chess.beans.ResChessRoomInfo.getDefaultInstance();
    }

    public org.okraAx.v3.chess.beans.ResChessRoomInfo build() {
      org.okraAx.v3.chess.beans.ResChessRoomInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.okraAx.v3.chess.beans.ResChessRoomInfo buildPartial() {
      org.okraAx.v3.chess.beans.ResChessRoomInfo result = new org.okraAx.v3.chess.beans.ResChessRoomInfo(this);
      int from_bitField0_ = bitField0_;
      if (infosBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          infos_ = java.util.Collections.unmodifiableList(infos_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.infos_ = infos_;
      } else {
        result.infos_ = infosBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.okraAx.v3.chess.beans.ResChessRoomInfo) {
        return mergeFrom((org.okraAx.v3.chess.beans.ResChessRoomInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.okraAx.v3.chess.beans.ResChessRoomInfo other) {
      if (other == org.okraAx.v3.chess.beans.ResChessRoomInfo.getDefaultInstance()) return this;
      if (infosBuilder_ == null) {
        if (!other.infos_.isEmpty()) {
          if (infos_.isEmpty()) {
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInfosIsMutable();
            infos_.addAll(other.infos_);
          }
          onChanged();
        }
      } else {
        if (!other.infos_.isEmpty()) {
          if (infosBuilder_.isEmpty()) {
            infosBuilder_.dispose();
            infosBuilder_ = null;
            infos_ = other.infos_;
            bitField0_ = (bitField0_ & ~0x00000001);
            infosBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInfosFieldBuilder() : null;
          } else {
            infosBuilder_.addAllMessages(other.infos_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.okraAx.v3.chess.beans.ResChessRoomInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.okraAx.v3.chess.beans.ResChessRoomInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo> infos_ =
      java.util.Collections.emptyList();
    private void ensureInfosIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        infos_ = new java.util.ArrayList<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo>(infos_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder> infosBuilder_;

    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public java.util.List<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo> getInfosList() {
      if (infosBuilder_ == null) {
        return java.util.Collections.unmodifiableList(infos_);
      } else {
        return infosBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public int getInfosCount() {
      if (infosBuilder_ == null) {
        return infos_.size();
      } else {
        return infosBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo getInfos(int index) {
      if (infosBuilder_ == null) {
        return infos_.get(index);
      } else {
        return infosBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder setInfos(
        int index, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo value) {
      if (infosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.set(index, value);
        onChanged();
      } else {
        infosBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder setInfos(
        int index, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder builderForValue) {
      if (infosBuilder_ == null) {
        ensureInfosIsMutable();
        infos_.set(index, builderForValue.build());
        onChanged();
      } else {
        infosBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder addInfos(org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo value) {
      if (infosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(value);
        onChanged();
      } else {
        infosBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder addInfos(
        int index, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo value) {
      if (infosBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInfosIsMutable();
        infos_.add(index, value);
        onChanged();
      } else {
        infosBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder addInfos(
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder builderForValue) {
      if (infosBuilder_ == null) {
        ensureInfosIsMutable();
        infos_.add(builderForValue.build());
        onChanged();
      } else {
        infosBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder addInfos(
        int index, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder builderForValue) {
      if (infosBuilder_ == null) {
        ensureInfosIsMutable();
        infos_.add(index, builderForValue.build());
        onChanged();
      } else {
        infosBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder addAllInfos(
        java.lang.Iterable<? extends org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo> values) {
      if (infosBuilder_ == null) {
        ensureInfosIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, infos_);
        onChanged();
      } else {
        infosBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder clearInfos() {
      if (infosBuilder_ == null) {
        infos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        infosBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public Builder removeInfos(int index) {
      if (infosBuilder_ == null) {
        ensureInfosIsMutable();
        infos_.remove(index);
        onChanged();
      } else {
        infosBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder getInfosBuilder(
        int index) {
      return getInfosFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder getInfosOrBuilder(
        int index) {
      if (infosBuilder_ == null) {
        return infos_.get(index);  } else {
        return infosBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public java.util.List<? extends org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder> 
         getInfosOrBuilderList() {
      if (infosBuilder_ != null) {
        return infosBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(infos_);
      }
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder addInfosBuilder() {
      return getInfosFieldBuilder().addBuilder(
          org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder addInfosBuilder(
        int index) {
      return getInfosFieldBuilder().addBuilder(
          index, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .org.okraAx.v3.ResChessRoomInfo.RoomInfo infos = 1;</code>
     */
    public java.util.List<org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder> 
         getInfosBuilderList() {
      return getInfosFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder> 
        getInfosFieldBuilder() {
      if (infosBuilder_ == null) {
        infosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfo.Builder, org.okraAx.v3.chess.beans.ResChessRoomInfo.RoomInfoOrBuilder>(
                infos_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        infos_ = null;
      }
      return infosBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:org.okraAx.v3.ResChessRoomInfo)
  }

  // @@protoc_insertion_point(class_scope:org.okraAx.v3.ResChessRoomInfo)
  private static final org.okraAx.v3.chess.beans.ResChessRoomInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.okraAx.v3.chess.beans.ResChessRoomInfo();
  }

  public static org.okraAx.v3.chess.beans.ResChessRoomInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ResChessRoomInfo>
      PARSER = new com.google.protobuf.AbstractParser<ResChessRoomInfo>() {
    public ResChessRoomInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResChessRoomInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ResChessRoomInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ResChessRoomInfo> getParserForType() {
    return PARSER;
  }

  public org.okraAx.v3.chess.beans.ResChessRoomInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

